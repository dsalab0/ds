#include <stdio.h>
#include <stdlib.h>
struct node {
    char usn[25], name[25], branch[25];
    int sem;
    long int phone;
    struct node *link;
};
typedef struct node *NODE;
NODE start = NULL;
int count = 0;
NODE create() {
    NODE snode = (NODE)malloc(sizeof(struct node));
    if (snode == NULL) {
        printf("\nMemory is not available");
        exit(1);
    }
    printf("\nEnter the USN, Name, Branch, Semester, Phone number of the student: ");
    scanf("%s %s %s %d %ld", snode->usn, snode->name, snode->branch, &snode->sem, &snode->phone);
    snode->link = NULL;
    count++;
    return snode;
}

void display() {
    NODE cur = start;
    int num = 1;
    if (start == NULL) {
        printf("\nNo contents to display.\n");
        return;
    }
    printf("\nContents of the linked list:\n");
    while (cur != NULL) {
        printf("\n||%d|| USN: %s | Name: %s | Branch: %s | Semester: %d | Phone: %ld |", 
               num, cur->usn, cur->name, cur->branch, cur->sem, cur->phone);
        cur = cur->link;
        num++;
    }
    printf("\nNumber of student nodes: %d\n", count);
}
void insertFront() {
    NODE temp = create();
    temp->link = start;
    start = temp;
}
void deleteFront() {
    NODE temp;
    if (start == NULL) {
        printf("\nLinked list is empty.\n");
        return;
    }
    temp = start;
    start = start->link;
    printf("\nThe student node with USN: %s is deleted.\n", temp->usn);
    free(temp);
    count--;
}
int main() {
    int ch;
    while (1) {
        printf("\n~~~Menu~~~");
        printf("\n1: Create linked list of student nodes");
        printf("\n2: Display status");
        printf("\n3: Insert at front");
        printf("\n4: Delete at front");
        printf("\n5: Exit\n");
        printf("\nEnter your choice: ");
        scanf("%d", &ch);
        switch (ch) {
            case 1: {
                int n, i;
                printf("\nEnter the number of students: ");
                scanf("%d", &n);
                for (i = 0; i < n; i++)
                    insertFront();
                break;
            }
            case 2:
                display();
                break;
            case 3:
                insertFront();
                break;
            case 4:
                deleteFront();
                break;
            case 5:
                exit(0);
            default:
                printf("\nPlease enter a valid choice.\n");
        }
    }
    return 0;
}